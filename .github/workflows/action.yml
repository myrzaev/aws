name: CI
on:
  push:
    branches:
     - master
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
     - name: Checkout repository
       uses: actions/checkout@v4

     - name: Setup Node.js
       uses: actions/setup-node@v4
       with:
          node-version: 18
          cache: 'npm'

     - name: Install dependencies
       run: npm ci

     - name: Build project
       run: npm run build

     - name: Archive production artifacts
       run: |
        mkdir -p release
        cp -r dist/* release/
        cp package.json package-lock.json release/
       shell: bash

     - name: Upload artifact
       uses: actions/upload-artifact@v4
       with:
        name: release-artifact
        path: release/
  
  deploy:
    name: deploy
    needs: build
    runs-on: ubuntu-latest

    env:
      SERVER_USERNAME: ubuntu
      SERVER_IP: ec2-18-226-104-112.us-east-2.compute.amazonaws.com
      SSH_KEY_PATH: pennsylvania-sam-mbp.pem
      TARGET_DIR: /home/ubuntu/app2

    steps:
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH

      - name: Ensure SSH Directory Exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
      
      - name: Add Server to Known Hosts
        run: |
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

      - name: SSH into Server and List Files
        run: ssh -i "$SSH_KEY_PATH" $SERVER_USERNAME@$SERVER_IP "ls -lah"

      - name: Create target directory on server
        run: |
          ssh -i "$SSH_KEY_PATH" $SERVER_USERNAME@$SERVER_IP "mkdir -p $TARGET_DIR/foo"

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact
          path: release/

      - name: Copy code to server
        run: |
          scp -i "$SSH_KEY_PATH" -r release/* $SERVER_USERNAME@$SERVER_IP:$TARGET_DIR/

      - name: Install Node Modules on Server
        run: |
          ssh -i "$SSH_KEY_PATH" $SERVER_USERNAME@$SERVER_IP "cd $TARGET_DIR/foo && npm install"

      - name: Restart systemd service
        run: |
          ssh -i "$SSH_KEY_PATH" $SERVER_USERNAME@$SERVER_IP "sudo systemctl restart myapp"